// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator dbml {
  provider            = "prisma-dbml-generator"
  outputName          = "core.api.dbml"
  output              = "../"
  projectDatabaseType = "PostgreSQL"
}

generator pothos {
  provider     = "prisma-pothos-types"
  clientOutput = "../dist/client/"
  output       = "../dist/photos-types.ts"
}

generator client {
  provider = "prisma-client-js"
  output   = "../dist/client/"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  firstName String
  lastName  String

  email                  String  @unique
  isEmailVerified        Boolean @default(false)
  // sha256 hash of token
  emailVerificationToken String? @unique

  password String

  accessTokens AccessToken[]
  resetRequest ResetRequest[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  // sha256 hash of token
  reactivationToken String? @unique
}

model AccessToken {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  // sha256 hash of the token
  token     String   @unique
  expiresAt DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("access_token")
}

enum ResetType {
  PASSWORD
  EMAIL
}

model ResetRequest {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  type ResetType

  // sha256 hash of the token
  token     String   @unique
  expiresAt DateTime

  newValue String? @unique

  usedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reset_request")
}
